def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'danger', 'ABORTED': 'danger', 'STARTED': '#33AFFF']

def getBuildUser() {
    return currentBuild.rawBuild.getCause(Cause.UserIdCause).getUserId()
}
pipeline {
    agent {
        docker {
            image 'maven'
            args '-v /root/.m2:/root/.m2'
        }
    }
    triggers {
        pollSCM 'H/2 * * * *'
    }
    stages {
        stage('Checkout') {
            steps {
                slackSend channel: 'jenkins-ci', color: '#33AFFF', message: "*STARTED*: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n *More info at:* ${env.BUILD_URL}", teamDomain: 'sensedia', tokenCredentialId: 'slack'
                git credentialsId: 'aws', url: 'https://git-codecommit.sa-east-1.amazonaws.com/v1/repos/ms-customer'
            }
        }        
        stage('Build + Unit tests') {
            steps {
                    sh 'mvn clean test'
            }   
        }
        stage('Archiving Reports') {
            steps {
                dir(path: '.') {
                    publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'target/site/jacoco/', reportFiles: 'index.html', reportName: 'Code Coverage', reportTitles: 'Code Coverage'])
                    step([$class: 'JUnitResultArchiver', testResults: 'target/surefire-reports/TEST-*.xml'])
                }
            }   
        }
        stage('BDD tests job'){
            steps {
                build job: 'Ultragaz_bdd-ms-customer-pipeline', wait: true
            }
        }    
    }
    post {
        always {

            slackSend channel: 'jenkins-ci', teamDomain: 'sensedia', tokenCredentialId: 'slack',
                color: COLOR_MAP[currentBuild.currentResult],
                message: "*${currentBuild.currentResult}:* Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n *More info at:* ${env.BUILD_URL}"
            
        }
    }        
}
